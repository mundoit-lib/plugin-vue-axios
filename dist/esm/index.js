import l from'axios';import {z}from'zod';var s,x=z.object({baseURL:z.string(),db:z.string(),clientID:z.string(),clientSecret:z.string(),fixURL:z.string(),updateToken:z.function().optional(),onError:z.function().optional()}),c=()=>{if(!s)throw new Error("Axios instance is not initialized");return s},p=o=>{let e=x.safeParse(o);if(!e.success)throw console.error(e.error),new Error("Invalid Axios configuration");s=l.create({baseURL:e.data.baseURL,headers:{"Content-Type":"application/json"}}),s.interceptors.response.use(r=>r,async r=>{let{status:a}=r.response;if(a===401){let t=r.config;if(!t._retry){t._retry=!0;try{let n=await g(e.data.fixURL,e.data.clientID,e.data.clientSecret);return t.headers.Authorization=`Bearer ${n.access_token}`,s.defaults.headers.common.Authorization=`Bearer ${n.access_token}`,e.data.updateToken&&e.data.updateToken(n),s(t)}catch(n){return console.error("Error al actualizar token",n),e.data.onError&&e.data.onError(),Promise.reject(n)}}return e.data.onError&&e.data.onError(),Promise.reject(r)}return e.data.onError&&e.data.onError(),Promise.reject(r)});},g=async(o,e,r)=>{try{let a=localStorage.getItem("refreshToken"),{data:t}=await l.post(`${o}/token`,{grant_type:"refresh_token",client_id:e,client_secret:r,refresh_token:a,notification_token:null});if(t.error||t.error_description)throw new Error(t.error);let n=t.expires_in,f=new Date().getTime()+n*1e3;return localStorage.setItem("accessToken",t.access_token),localStorage.setItem("refreshToken",t.refresh_token),localStorage.setItem("tokenExpireDate",f+""),{...t,nuevaFechaExpiracion:f}}catch(a){throw a}};var A=(o,e)=>{if(p(e),typeof o.version=="string"&&o.version.startsWith("3.")){o.config.globalProperties.$axios=c();return}o.prototype.$axios=c();};export{s as axiosInstance,c as getAxiosInstance,p as initializeAxios,A as install};